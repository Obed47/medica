"""
Django settings for authentification project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

#pour enreigistrer une personne, on va dans row, on selectionne json en on envoi en POST avec 
#http://127.0.0.1:8000/register

#pour lire les donnees, on utilise http://127.0.0.1:8000/api/userprofiles en GET

#pour se connecter on utilise form-data en POST et avec http://127.0.0.1:8000/api/login 
#on insere l'email et le mot de passe 

# key: email              value: stefanmouope72@gmail.com
#key : password           value: 12345


#pour envoyer un code, on utilise http://127.0.0.1:8000/password_reset en POST dans body->raw->json

#ca c'est pour password_reset

# {
#      "email": "stefan.bouognong@facsciences-uy1.cm"
# }

#ca c'est pour verify code 
# {
#   "email": "stefan.bouognong@facsciences-uy1.cm",
#   "code": "824266",
#   "new_password": "1234567"
# }





# password pour admin: 12345
# user : bouognong

from pathlib import Path

from . info import *

EMAIL_USE_TLS=EMAIL_USE_TLS #mathode de protection des email sur internet 

EMAIL_HOST=EMAIL_HOST

EMAIL_HOST_USER=EMAIL_HOST_USER

EMAIL_HOST_PASSWORD=EMAIL_HOST_PASSWORD

EMAIL_PORT= EMAIL_PORT

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8b=^l@w#)kh3p5_tlyt@j)ey17^l_)a9rsjc@deoz5vj36s1c5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] 


# ALLOWED_HOSTS = ['192.168.23.157', '0.0.0.0', 'localhost',]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'rest_framework',

    'rest_framework_simplejwt',
    'corsheaders'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

ROOT_URLCONF = 'authentification.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'authentification.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'medica',
        'USER': 'carine',
        'PASSWORD': 'carine123',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
      'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    # Autres configurations
}

CORS_ALLOW_ALL_ORIGINS = True

CSRF_COOKIE_HTTPONLY = True

CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000'] 

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
